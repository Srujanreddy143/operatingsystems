#include<stdio.h>  
#include<conio.h> 
#include<string.h> 
  
void main()  
{  
     
    int i, nop=0, y, z, sum=0,count=0, quant, wt=0, tat=0, at[10], bt[10], temp[10], time=0, count1=0;  
    char type[20];
    float avg_wt, avg_tat, avg_query_time;   
    printf(" Tell total  number of process in the system bro : ");  
    scanf("%d", &nop);

  
    // Use for loop to enter the details of the process like Arrival time and the Burst Time
    
    for(i=0; i<nop; i++)
    {  
    printf("\nplease tell Process type bro : ");
    scanf("%s", type);
    
    if((time<=240)&&(strcmp(type,"take")==0)){
        printf("Arrival time is: \t");  // Accept arrival time
        scanf("%d", &at[i]);    
        bt[i]=40;     //Fixing burst time for new process
        temp[i] = 40; // store the burst time in temp array
        time = time + 40;
        count1=count1+1; }
    else if((time<=240)&&(strcmp(type,"enter")==0)){
        printf("Tell Arrival time bro: \t");  // Accept arrival time
        scanf("%d", &at[i]);    
        bt[i]=25;     //Fixing burst time for regular process
        temp[i] = 25; // store the burst time in temp array
        time = time + 25;
        count1=count1+1; }
    else{
        y=count1;
        z=count1;
        break;
    }
    } 
    
    
    
printf("Enter the Time Quantum for the process: \t");  
scanf("%d", &quant);  
// Display the process No, burst time, Turn Around Time and the waiting time  
printf("\n Process No \t\t Burst Time \t\t TAT \t\t Waiting Time ");  
for(sum=0, i = 0; y!=0; )  
{  
if(temp[i] <= quant && temp[i] > 0) // define the conditions   
{  
    sum = sum + temp[i];  
    temp[i] = 0;  
    count=1;  
    }     
    else if(temp[i] > 0)  
    {  
        temp[i] = temp[i] - quant;  
        sum = sum + quant;    
    }  
    if(temp[i]==0 && count==1)  
    {  
        y--; //decrement the process no.  
        printf("\nProcess No[%d]  \t\t %d\t\t\t %d   \t\t %d", i+1, bt[i], sum-at[i], sum-at[i]-bt[i]);  
        wt = wt+sum-at[i]-bt[i];  
        tat = tat+sum-at[i];  
        count =0;     
    }  
    if(i==nop-1)  
    {  
        i=0;  
    }  
    else if(at[i+1]<=sum)  
    {  
        i++;  
    }  
    else  
    {  
        i=0;  
    }  
} 


// represents the average waiting time and Turn Around time  
avg_wt = wt * 1.0/nop;  
avg_tat = tat * 1.0/nop; 
avg_query_time = (float)time/z; 
printf("\n \t Your problem Summary bro");
printf("\n Average Turn Around Time: %.2f", avg_wt);  
printf("\n Average Waiting Time: %.2f", avg_tat);  
printf("\n Total time spent: %d",time);
printf("\n Average query time: %.2f", avg_query_time);
}
